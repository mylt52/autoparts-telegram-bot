// api/webhook.ts - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª Telegram –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π

import { VercelRequest, VercelResponse } from '@vercel/node';

interface TelegramMessage {
  message: {
    chat: { id: number };
    text: string;
    from?: { first_name?: string; username?: string };
  };
}

interface PerplexityResponse {
  choices: Array<{
    message: {
      content: string;
    };
  }>;
}

export default async function handler(req: VercelRequest, res: VercelResponse) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }
  
  try {
    const { message }: TelegramMessage = req.body;
    
    if (!message || !message.text) {
      return res.status(200).json({ ok: true });
    }
    
    const chatId = message.chat.id;
    const userText = message.text.trim();
    const userName = message.from?.first_name || message.from?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    
    console.log(`üìù –ó–∞–ø—Ä–æ—Å –æ—Ç ${userName} (${chatId}): ${userText}`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (userText.startsWith('/start')) {
      await sendTelegramMessage(chatId, getWelcomeMessage());
      return res.status(200).json({ ok: true });
    }
    
    if (userText.startsWith('/help')) {
      await sendTelegramMessage(chatId, getHelpMessage());
      return res.status(200).json({ ok: true });
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    await sendTypingAction(chatId);
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π —á–µ—Ä–µ–∑ Perplexity
    const result = await searchAutoparts(userText);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await sendTelegramMessage(chatId, result);
    
    console.log(`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
    res.status(200).json({ ok: true });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ webhook:', error);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try {
      const { message } = req.body;
      if (message?.chat?.id) {
        await sendTelegramMessage(
          message.chat.id, 
          '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.'
        );
      }
    } catch (sendError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', sendError);
    }
    
    res.status(500).json({ error: 'Internal server error' });
  }
}

// üß† –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –ü–æ–∏—Å–∫ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π —á–µ—Ä–µ–∑ Perplexity
async function searchAutoparts(userMessage: string): Promise<string> {
  try {
    const response = await fetch('https://api.perplexity.ai/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.PERPLEXITY_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'llama-3.1-sonar-small-128k-online',
        messages: [{
          role: 'user',
          content: createExpertPrompt(userMessage)
        }],
        temperature: 0.1,
        max_tokens: 1000
      })
    });
    
    if (!response.ok) {
      throw new Error(`Perplexity API error: ${response.status} ${response.statusText}`);
    }
    
    const data = await response.json() as PerplexityResponse;
    const content = data.choices[0]?.message?.content;
    
    if (!content) {
      throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç Perplexity API');
    }
    
    return content;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Perplexity:', error);
    return '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—á–∞—Å—Ç—è—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å VIN-–∫–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
  }
}

// üéØ –ü–†–û–î–£–ú–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢ –¥–ª—è Perplexity API
function createExpertPrompt(userMessage: string): string {
  return `
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç—è–º —Å 15+ –ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º –∏ –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–º —Ä—ã–Ω–∫–µ. –¢—ã –ø–æ–º–æ–≥–∞–µ—à—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏.

–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ê–ü–ò–°–ê–õ: "${userMessage}"

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:

1. –ê–ù–ê–õ–ò–ó VIN-–ö–û–î–ê (–µ—Å–ª–∏ –µ—Å—Ç—å):
   - –î–µ–∫–æ–¥–∏—Ä—É–π VIN –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ —Ç–æ—á–Ω—É—é –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è
   - –£–∫–∞–∂–∏ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞, –¥–≤–∏–≥–∞—Ç–µ–ª—å, –∫—É–∑–æ–≤
   - –ï—Å–ª–∏ VIN –Ω–µ–ø–æ–ª–Ω—ã–π –∏–ª–∏ –Ω–µ—Ç–æ—á–Ω—ã–π - —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º

2. –ü–û–ò–°–ö –ó–ê–ü–ß–ê–°–¢–ï–ô:
   - –ù–∞–π–¥–∏ —Ç–æ—á–Ω—ã–µ OEM –∞—Ä—Ç–∏–∫—É–ª—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
   - –£–∫–∞–∂–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å –ø–æ –≥–æ–¥–∞–º –≤—ã–ø—É—Å–∫–∞
   - –ü—Ä–∏–≤–µ–¥–∏ 2-3 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–∞ (Febi, Lemforder, TRW, Bosch, etc.)
   
3. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
   - –ö–∞–∫–∏–µ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ —Å—Ç–æ–∏—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É
   - –ù–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ
   - –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏

–í–ê–ñ–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–∑ –Ω–∞–¥–µ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
- –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω –≤ –∞—Ä—Ç–∏–∫—É–ª–µ - –ª—É—á—à–µ —Å–∫–∞–∂–∏ "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
- –£–∫–∞–∑—ã–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –±—Ä–µ–Ω–¥—ã –∞–Ω–∞–ª–æ–≥–æ–≤, –Ω–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–æ–º–µ—Ä–∞
- –î–ª—è –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –æ—Ä–∏–≥–∏–Ω–∞–ª > –ø—Ä–µ–º–∏—É–º –∞–Ω–∞–ª–æ–≥–∏ > –±—é–¥–∂–µ—Ç
- –ï—Å–ª–∏ –Ω–µ—Ç VIN - –ø–æ–ø—Ä–æ—Å–∏ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, –≥–æ–¥, –¥–≤–∏–≥–∞—Ç–µ–ª—å)

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üöó **–ê–≤—Ç–æ–º–æ–±–∏–ª—å:** [—Ç–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å —Å –≥–æ–¥–∞–º–∏]
üîß **OEM –∞—Ä—Ç–∏–∫—É–ª:** [–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è]
üîÑ **–ê–Ω–∞–ª–æ–≥–∏:** [2-3 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –±—Ä–µ–Ω–¥–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏]
‚ö†Ô∏è **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:** [—Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ –∏ —Å–æ–≤–µ—Ç—ã]
üìã **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:** [–≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–º–µ–Ω–µ]

–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ - –∑–∞–ø—Ä–æ—Å–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–û–¢–í–ï–ß–ê–ô –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï, –±—É–¥—å —Ç–æ—á–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.
`;
}

// üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(chatId: number, text: string): Promise<void> {
  const url = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;
  
  await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      chat_id: chatId,
      text: text,
      parse_mode: 'Markdown',
      disable_web_page_preview: true
    })
  });
}

// ‚å®Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–ø–µ—á–∞—Ç–∞–µ—Ç..."
async function sendTypingAction(chatId: number): Promise<void> {
  const url = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendChatAction`;
  
  await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      chat_id: chatId,
      action: 'typing'
    })
  });
}

// üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
function getWelcomeMessage(): string {
  return `
üöó **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AutoParts Assistant!**

–Ø –ø–æ–º–æ–≥—É –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ –ø–æ VIN-–∫–æ–¥—É –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª—è.

**–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ \`VIN: WBA3B1C50DF123456, –Ω—É–∂–Ω—ã —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ –ø–µ—Ä–µ–¥–Ω–∏–µ\`
‚Ä¢ \`BMW F30 320i 2015, –º–∞—Å–ª—è–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä\`
‚Ä¢ \`Mercedes W204 C200 2012, –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã –∑–∞–¥–Ω–∏–µ\`

**–ö–æ–º–∞–Ω–¥—ã:**
/help - –ø–æ–º–æ—â—å –∏ –ø—Ä–∏–º–µ—Ä—ã
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

**–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ VIN-–∫–æ–¥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏** - —è –Ω–∞–π–¥—É —Ç–æ—á–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª—ã –∏ –∞–Ω–∞–ª–æ–≥–∏! üîß
`;
}

// ‚ùì –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏
function getHelpMessage(): string {
  return `
üîß **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:**

**1. –° VIN-–∫–æ–¥–æ–º (—Å–∞–º—ã–π —Ç–æ—á–Ω—ã–π —Å–ø–æ—Å–æ–±):**
\`VIN: WVWZZZ3CZDE123456, –Ω—É–∂–Ω—ã –ø–µ—Ä–µ–¥–Ω–∏–µ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏\`

**2. –ë–µ–∑ VIN (—É–∫–∞–∂–∏—Ç–µ –º–∞—Ä–∫—É, –º–æ–¥–µ–ª—å, –≥–æ–¥):**
\`Audi A4 B8 2.0 TDI 2010, —Ç–æ–ø–ª–∏–≤–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä\`

**3. –ü–æ –ø–æ–∫–æ–ª–µ–Ω–∏—é –∫—É–∑–æ–≤–∞:**
\`BMW E90 320i, —Å–≤–µ—á–∏ –∑–∞–∂–∏–≥–∞–Ω–∏—è\`

**–ß—Ç–æ —è –Ω–∞–π–¥—É:**
‚úÖ –¢–æ—á–Ω—ã–µ OEM –∞—Ä—Ç–∏–∫—É–ª—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏ (Febi, TRW, Bosch)
‚úÖ –°–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–º–µ–Ω–µ

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–∞—Ä–∫–∏:**
BMW, Mercedes, Audi, Volkswagen, Skoda, Opel, Ford, Renault, Peugeot, Citroen –∏ –¥—Ä—É–≥–∏–µ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –º–∞—Ä–∫–∏.

–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ –∏—â–µ—Ç–µ - —è –ø–æ–º–æ–≥—É! üöÄ
`;
}
